name: Terraform_docs_and_test

on:
  workflow_dispatch:
    inputs:
      log-level:
        description: 'Log level (trace, debug, info, warn, error, fatal, panic)'
        required: false
        default: 'info'
        type: string
  
  push:        
    paths:
      - modules/**

   
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PATH_PREFIX: modules

  # Env variables used by terraform cli
  TF_INPUT: false
  TF_IN_AUTOMATION: true
  TF_LOG: INFO

  # Env variables for AzureRM provider and backend
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

  # Terraform variables for azurerm provider confguration
  TF_VAR_client_id: ${{ vars.AZURE_CLIENT_ID }}
  TF_VAR_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  TF_VAR_tenant_id: ${{ vars.AZURE_TENANT_ID }}

  # GitHub App authentication variables for github provider
  GITHUB_APP_ID: ${{ secrets.APP_ID }}
  GITHUB_APP_INSTALLATION_ID: ${{ secrets.APP_INSTALLATION_ID }}
  GITHUB_APP_PEM_FILE: ${{ secrets.APP_PEM_FILE }}

permissions:
  pull-requests: write
  contents: write
  id-token: write

jobs:

  find-changes:    
    name: Find in modules folder
    runs-on: ubuntu-latest
    outputs:
      changed-modules: ${{ steps.changed-modules.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39        
        # uses: ./.github/actions/changed-files        
        with:
          files_ignore: '.github/workflows/**'
      - name: Get changed modules
        id: changed-modules
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const prefix_path = process.env.PATH_PREFIX;
            const paths = "${{ steps.changed-files.outputs.all_modified_files }}";
            const regex = /modules\/([^/]+)\/([^/]+)/g;            
            const matches = paths.match(regex);
            
            console.log(`prefix_path: ${prefix_path}`);
            console.log(`regex: ${regex}`);
            console.log(`Paths: ${paths}`);
            console.log(`Found matches: ${matches}`);
            
            if (!matches) {
              return [];
            }
            // Extract the module names from the matches
            const moduleNames = matches.map(match => {
              return match; // Extract the entire match
            });
            // Remove duplicates and return the unique module names
            const uniqueModuleNames = Array.from(new Set(moduleNames));
            console.log(uniqueModuleNames);
            return uniqueModuleNames;

  validate-output:
    runs-on: ubuntu-latest
    needs: find-changes
    steps:
     - run: echo ${{ needs.find-changes.outputs.changed-modules }}
     - run: printenv

  module-review:
    name: Individual module review
    runs-on: ubuntu-latest
    needs: [find-changes]
    environment: Reviewers
    strategy:      
      matrix: 
        module: ${{ fromJson(needs.find-changes.outputs.changed-modules) }}
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Azure login
        uses: azure/login@v2
        env:
          AZURE_LOGIN_PRE_CLEANUP: false
          AZURE_LOGIN_POST_CLEANUP: false
        with:
          creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ vars.AZURE_TENANT_ID }}"}'


      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_hostname: app.terraform.io
          terraform_version: latest
          terraform_wrapper: false  # Disable the wrapper
      - name: Check Pre-installed Terraform
        run: terraform --version
      - run: terraform init
      - run: terraform fmt 
      - run: terraform validate
      - run: terraform test
  
  update-readme:
    name: Update README for changed modules
    runs-on: ubuntu-latest
    environment: Reviewers
    needs: [find-changes, module-review]
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        module: ${{ fromJson(needs.find-changes.outputs.changed-modules) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
      - name: pull repo 
        run: git pull origin ${{ github.event.pull_request.head.ref || github.ref_name }}
      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@v1
        # uses: ./.github/actions/terraform-docs
        with:
          working-dir: ${{ matrix.module }}
          output-file: README.md
          output-method: inject
          git-push: "true"