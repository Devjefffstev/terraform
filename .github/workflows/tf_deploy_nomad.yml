name: Deploy_nomad

on:
  workflow_dispatch:
    inputs:
      log-level:
        description: 'Log level (trace, debug, info, warn, error, fatal, panic)'
        required: false
        default: 'info'
        type: string
  
  push:        
    paths:
      - howtouse/nomad_azure/**

   
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PATH_PREFIX: modules

  # Env variables used by terraform cli
  TF_INPUT: false
  TF_IN_AUTOMATION: true
  TF_LOG: INFO

  # Env variables for AzureRM provider and backend
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

  # Terraform variables for azurerm provider confguration
  TF_VAR_client_id: ${{ vars.AZURE_CLIENT_ID }}
  TF_VAR_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  TF_VAR_tenant_id: ${{ vars.AZURE_TENANT_ID }}

  # GitHub App authentication variables for github provider
  GITHUB_APP_ID: ${{ secrets.APP_ID }}
  GITHUB_APP_INSTALLATION_ID: ${{ secrets.APP_INSTALLATION_ID }}
  GITHUB_APP_PEM_FILE: ${{ secrets.APP_PEM_FILE }}

permissions:
  pull-requests: write
  contents: write
  id-token: write

jobs:

  module-review:
    name: Individual module review
    runs-on: ubuntu-latest    
    environment: Reviewers       
    steps:
      - name: Azure login
        uses: azure/login@v2
        env:
          AZURE_LOGIN_PRE_CLEANUP: false
          AZURE_LOGIN_POST_CLEANUP: false
        with:
          creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ vars.AZURE_TENANT_ID }}"}'


      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_hostname: app.terraform.io
          terraform_version: latest
          terraform_wrapper: false  # Disable the wrapper
      - name: Check Pre-installed Terraform
        run: terraform --version
      - run: terraform init
        working-directory: howtouse/nomad_azure
      - run: terraform fmt 
        working-directory: howtouse/nomad_azure
      - run: terraform validate
      - run: terraform test
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -var "subscription_id=${{ vars.ARM_SUBSCRIPTION_ID }}" -var-file=example_vars/example.tfvars
        working-directory: howtouse/nomad_azure
        
        # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: terraform apply
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        if: github.ref == 'refs/heads/workflow-terraform' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -var "subscription_id=${{ vars.ARM_SUBSCRIPTION_ID }}" -var-file=example_vars/example.tfvars
        working-directory: howtouse/nomad_azure        
  
