# Core required variables
resource_group_name = "rg-nomad-test-001"
location            = "East US"
environment         = "test"
app_function_chatam = "nomad"

# VMSS Configuration
vmss_name = "vmss-nomad-test-001"
instances = 3

# Admin Configuration
admin_password = "P@ssw0rd123!"
admin_ssh_keys = [
  {
    username   = "azureuser"
    public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7S5culLmDZ8XB9X2d2VqDpQ=="
    id         = "key1"
  }
]

# User Data (Base64 encoded cloud-init script)
user_data_base64 = "IyEvYmluL2Jhc2gKZWNobyAiSGVsbG8gV29ybGQi"

# Network and Security
network_interface = [
  {
    name    = "internal"
    primary = true
    ip_configuration = [
      {
        name      = "internal"
        primary   = true
        subnet_id = "/subscriptions/12345678-1234-1234-1234-123456789012/resourceGroups/rg-nomad-test-001/providers/Microsoft.Network/virtualNetworks/vnet-nomad-test/subnets/subnet-nomad"
      }
    ]
  }
]

# VM Configuration
sku                        = "Standard_B2s"
computer_name_prefix       = "nomad"
disable_password_authentication = false

# Storage
os_disk = {
  caching              = "ReadWrite"
  storage_account_type = "Premium_LRS"
  disk_size_gb         = 128
}

# Zones and Scaling
zones = ["1", "2", "3"]
zone_balance = true

# Instance Settings
overprovision                = false
single_placement_group       = true
upgrade_mode                = "Manual"
priority                    = "Regular"
max_bid_price               = -1

# Extensions
extension_operations_enabled = true
extensions_time_budget      = "PT1H30M"

# Monitoring and Diagnostics
enable_telemetry = true
boot_diagnostics = {
  storage_account_uri = null
}

# Security Settings
encryption_at_host_enabled = false
secure_boot_enabled       = false
vtpm_enabled             = false

# Additional Capabilities
additional_capabilities = {
  ultra_ssd_enabled = false
}

# Automatic Instance Repair
automatic_instance_repair = {
  enabled      = true
  grace_period = "PT30M"
}

# Tags
tags = {
  Environment = "test"
  Project     = "nomad-poc"
  Owner       = "platform-team"
  CostCenter  = "engineering"
}

# Health Probe (if using load balancer)
health_probe_id = null

# Identity
identity = {
  type = "SystemAssigned"
  identity_ids = []
}

# License
license_type = null

# Platform Fault Domain Count
platform_fault_domain_count = 5

# Proximity Placement Group
proximity_placement_group_id = null

# Scale In Policy
scale_in = {
  rule                   = "Default"
  force_deletion_enabled = false
}

# Source Image Reference
source_image_reference = {
  publisher = "Canonical"
  offer     = "0001-com-ubuntu-server-focal"
  sku       = "20_04-lts-gen2"
  version   = "latest"
}

# Termination Notification
termination_notification = {
  enabled = true
  timeout = "PT5M"
}

# Extension Protected Settings (empty for test)
extension_protected_setting = {}

# Data Disks (empty for basic test)
data_disk = []

# Extensions (empty for basic test)  
extension = []

# Rolling Upgrade Policy
rolling_upgrade_policy = {
  cross_zone_upgrades_enabled             = false
  maximum_unhealthy_instance_percent      = 20
  maximum_unhealthy_upgraded_instance_percent = 20
  pause_time_between_batches             = "PT0S"
  prioritize_unhealthy_instances_enabled  = false
}

# Spot Instance Settings
spot_restore = {
  enabled = false
  timeout = "PT1H"
}